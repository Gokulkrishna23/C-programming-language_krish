C (Programming Language)-part-1
Q1. Which Code sample will eventually cause the computer to run out of memory?
ANS:
while(1)
{
    char *smallString = (char *) malloc(10);
}
 
 
Q2. What will this code print on the screen?
int f1 (int a, int b)
{
    if (a > b)
    {
        printf("A is greater than B\n");
        return 1;
    }
    else
    {
        printf("B is greater than A");
        return 0;
    }
}

main()
{
    if (f1(20,10) || f1(10,20))
        printf("C is fun!\n");
}
ANS: A is greater than B
C is fun!
 
 
Q3. What is the name for calling a function inside the same function?
ANS: recursion
Q4. What does the declaration of variable c2 demonstrate?
main(){
    char c1 ='a';
    char c2 = c1+10;
}
ANS: character arithmetic
 
Q5. A pointer to void named vptr, has been set to point to a floating point variable named g. What is the valid way to dereference vptr to assign its pointed value to a float variable named f later in this program?
float g;
void *vptr=&g;
ANS:  f = *(float *)vptr;
 
Q6. What is this declaration an example of?
struct s {
    int i;
    struct s *s1;
    struct s *s2;
};
ANS: a node
 
 Q7. A C header file is a file with extension .h that contains function declarations and macro definitons to be shared between several source files. Header files are listed using the preprocessing directive #include, and can have one of the following formats: #include <fileA> or #include "fileB". What is the difference between these two formats?
ANS:The preprocessor will try to locate the fileA in a predetermined directory path. It will try to locate fileB in the same directory as the source file along with a custom directory path.
Q8. Using a for loop, how could you write a C code to count down from 10 to 1 and display each number on its own line?
ANS: int i;
for (i= 10; i>0; i--){
    printf("%d\n", i);
}// end of loop
Q9. What is not one of the reserved words in standard C?
 volatile
 typeof
 register
 Typedef
ANS: typeof
Reference:https://www.ibm.com/docs/en/adfz/developer-for-zos/14.2.0?topic=programs-c-reserved-keywords
 
Q10. What does the program shown below return?
int main(){
    int a=1, b=2, c=3, d=4;
    int x = a;
    if (a>b)
    if (b<c) x=b;
    else x=c;
    return(x);
}
ANS: 1
 
Q11. Using the Union declaration below, how many bytes of memory space will the data of this type occupy?
union Cars {
    char make[20];
    char model[30];
    short year;
} car;
ANS:  30
 
Q12. In this code sample, what is not a problem for C compiler?
main(){
    constant int PI = 3.14;
    printf("%f\n", pi);
}
ANS: The value of PI needs to be set to 3.141593, not 3.14
 
Q13. Which is the smallest program to compile and run without errors?
ANS: main() { }
Reference: https://www.beningo.com/150-the-wolrds-shortest-c-program/
Q14. What is optional in a function declaration?
ANS: parameter names
Q15. C treats all devices, such as the display and the keyboard, as files. Which files opens automatically when a program executes?
ANS: stdout
 
Q16. In which segment does dynamic memory allocation takes place?
ANS: heap
Reference: http://www.it.uc3m.es/pbasanta/asng/course_notes/dynamic_memory_heap_en.html#:~:text=The%20dynamic%20memory%20that%20is,reads%20a%20set%20of%20words.
Q17. Which function do you use to deallocate memory?
ANS:  free()
Reference: https://www.tutorialspoint.com/c_standard_library/c_function_free.htm
Q18. In C language what are the basic building blocks that are constructed together to write a program?
ANS:  tokens
Q19. When is memory for a variable allocated?
ANS:  during the declaration of the variable
Q20. By default c uses the call by value method to pass arguments to functions. How can you invoke the call by reference method?
ANS:  by using pointers
 
Q21. A union allows you to store different ___ in the same ___.
ANS:  Data types; Memory space
Q22. What is the output of this program?
main() {
    char c1='a' , c2='A';
    int i=c2-c1;
    printf("%d", i);
}
ANS:  -32
 
Q23. What is the difference between scanf() and sscanf() functions?
ANS:  The scanf() function reads formatted data from the keyboard; The sscanf() function reads formatted input from a string.


Q24. What is not a valid command with this declaration?
char *string[20] = { "one", "two", "three"};
 printf("%c", string[1][2]);
 printf("%s", string[1][2]);
 printf("%s", string[1]);
 printf(string[1]);
ANS: printf("%s", string[1][2]);
 
Q25. What is the expression player->name equivalent to?
ANS:  (\*player).name
 
Q26. Which program will compile and run without errors?
ANS: main() {
int i=0;
    for(; i<10; i++) ;
}
Q27. What does this function call return?
1 main() { float x = f1(10, 5); }
2 float f1(int a, int b) { return (a/b); }
ANS:  a compiler error
Q28. What does this program create?
#include <stdio.h>
int main() {
    int *p = NULL;
    return 0;
}
ANS:  a NULL pointer
 
Q29. What is an alternative way to write the expression (*x).y?
ANS:  x->y
 
Q30. Compile time errors are static errors that can be found where in the code?
ANS:  in declarations and definitions
 
Q31. File input and output (I/O) in C is heavily based on the way it is done ___?
ANS:   in Unix
 
Q32. What does the strcmp(str1, str2); function return?
ANS:  0 if str1 and str2 are the same, a negative number if str1 is less than str2, a positive number if str1 is greater than str2
 
Q33. What is the output of this program?
int a=10, b=20;
int f1(a) { return(a*b); }
main() {
printf("%d", f1(5));
}
ANS: 100
 
Q34. Which is not a correct way to declare a string variable?
ANS:  char string = "Hello World";
 
Q35. Which choice is an include guard for the header file mylib.h?
ANS: #ifndef MYLIB_H
#define MYLIB_H

// mylib.h content

#endif /* MYLIB_H */

Q36. How many times does the code inside the while loop get executed in this program?
main(){
 int x=1;
 while(x++<100){
    x*=x;
    if(x<10) continue;
    if(x>50) break
 }
}
ANS:  3
 
Q37. File input and output (I/O) in C is done through what?
ANS:   function calls

Q38. Directives are translated by the?
ANS:  Pre-processor
